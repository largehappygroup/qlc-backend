{
  "Remember": {
    "goal": "Your goal for this category is to generate questions that test the student's basic recall of definitions, purposes, and syntax for concepts they have demonstrated using in their code.",
    "subCategories": {
      "Infer Knowledge from Code": "You must assume that any programming construct, class, or keyword (e.g., public class, Scanner, for loop, System.out.println) present in the student's submission has been taught. Use these demonstrated concepts as the basis for your questions.",
      "Ask for Definitions and Purpose": "Generate questions that require the student to define a key term or explain the primary purpose of a construct they have used. The goal is to verify that the student can articulate the 'what' and 'why' behind the code they've written.",
      "Verify Syntax and Structure": "Formulate questions that check for recognition of the basic syntax or structure of a concept used in their code. The goal is to see if the student can identify the correct building blocks of the language."
    }
  },
  "Understand": {
    "goal": "Your goal for this category is to generate questions that test whether a student can process and interpret information, not just recall it. The questions should probe their comprehension of concepts demonstrated in their code.",
    "subCategories": {
      "Ask for Explanations and Interpretations": "Generate questions that require the student to explain or interpret a piece of their code or a related concept in their own words. The goal is to see if the student can describe 'why' a code block works.",
      "Test for Translation": "Create questions that ask the student to translate a concept from one form to another, verifying that they understand the underlying logic independent of the specific syntax.",
      "Connect Concepts to Application": "Formulate questions that test the student's ability to connect a concept to its direct application. This assesses whether they recognize how to use a concept they have identified."
    }
  },
  "Apply": {
    "goal": "Your goal for this category is to generate questions that test if a student can use a known concept, algorithm, or process to solve a new and unfamiliar problem.",
    "subCategories": {
      "Ask for Code Implementation or Modification": "Create questions that require students to select a small, never seen, piece of code or modified version of existing code based on a principle they have already used in their code. The goal is to see if they can implement a known pattern in a practical scenario.",
      "Test with new data": "Formulate questions that ask students to trace the execution of a method or predict the output given new inputs they have not seen before. This tests their ability to mentally apply the rules of the language to novel data.",
      "Solving a contained problem": "Provide a well-defined problem and ask the student to solve it using the specific concepts used in the code/taught in the chapter. The problem should be a new application of the concepts, not a simple repetition."
    }
  },
  "Evaluate": {
    "goal": "Your goal for this category is to generate questions that require the student to make judgement or critique a piece of code. This moves beyond understanding what the code does to assessing how well it does it, based on specific criteria like correctness, efficiency or style.",
    "subCategories": {
      "Ask for Code Comparison and Justification": "Provide the student with code snippets that solve the same problem. Ask them to compare the solutions and justify which one is more appropriate, efficient or correct in a given context.",
      "Assess correctness and Edge Case Analysis": "Formulate questions that asks the student to assess the correctness of a given code snippet, particularly by thinking about potential edge cases that might cause it to fail.",
      "Critique Code Quality": "Create questions that require the student to critique a piece of code based on correctness, robustness, efficiency, and overall design."
    }
  },
  "Create": {
    "goal": "Your goal for this category is to generate questions that test a student's ability to produce a new and original solution by synthesizing their knowledge. The student should not have seen the complete solution before; they must invent the algorithm or combine known concepts in a novel way.",
    "subCategories": {
      "Propose a Novel Problem": "Present a well-defined problem and ask the student to identify the correct code snippet that defines a new method or class to solve it. The goal is to assess their ability to translate a set of requirements into a working, original program. Make sure that the problem that you're proposing is similar to the students' code.",
      "Require Combination of Concepts": "Strictly, create code snippets that require the student to combine multiple known concepts (like loops, conditionals, and arrays) in a way they haven't seen before to solve a more complex problem.",
      "Ask for an Alternative Solution": "Present a piece of existing code and challenge the student to devise and implement an alternative program/code snippet to achieve the same result. Make sure you're providing the actual code."
  }
}
}
