{
  "Predict the output": {
    "definition": "This question type tests the student's ability to mentally trace the execution of a specific, self-contained block of code and determine its exact output.",
    "generation_directives": [
      "Identify a specific method or a contained block of code (like a loop or a series of calculations) from the student's submission.",
      "Provide concrete, new input values for all required variables or parameters.",
      "The correct answer must be exact result of appropriate type that the code would produce.",
      "The incorrect answers should be plausible results based on miscalculations that the student could make during code tracing.",
      "Every part of the generated output must be directly tied to the provided student's code.",
      "Do not ask questions that have anything to do with the Random class or it's seed. Do not even mention seed.",
      "All answer options must be parallel in structure and similar in length. Avoid making the correct answer noticeably different from the incorrect ones."
    ],
    "examples": [
      {
        "scenario": "The student's code has a method calculateSum(int a, int b).",
        "question_example": "If the method calculateSum is called with a = 5 and b = 10, what will be the exact output printed to the console?"
      },
      {
        "scenario": "The student's code has a for loop that iterates five times and prints the value of a variable i.",
        "question_example": "Consider the for loop in the main method. What is the final value of the variable total after the loop has finished executing?"
      }
    ]
  },
  "Edge Case Analysis": {
    "definition": "This question type tests a student's ability to analyze how code behaves when given inputs at the boundaries of the expected range or invalid inputs altogether.",
    "generation_directives": [
      "Identify a method or code block that receives input either directly from the user or from other methods.",
      "Provide concrete, new input values for all required variables or parameters.",
      "The correct answer must accurately describe the output for that specific edge case.",
      "The incorrect answers should describe other plausible but incorrect outputs.",
      "Every part of the generated output must be directly tied to the provided code submission.",
      "The question must target the exact line of code where the runtime error is thrown, not the line where a variable is simply assigned a problematic value.",
      "All answer options must be parallel in structure and similar in length. Avoid making the correct answer noticeably different from the incorrect ones."
    ],
    "examples": [
      {
        "scenario": "A method calculates the average of an array of numbers.",
        "question_example": "What will the calculateAverage method return if it is given an empty array as input?"
      },
      {
        "scenario": "A method is designed to work only with positive integers.",
        "question_example": "If the calculateFactorial method is called with an input of -1, how will the program behave?"
      }
    ]
  },
  "Variable State Trace": {
    "definition": "This question type tests the student's ability to follow the step-by-step execution of code and track the value of a specific variable as it changes over time.",
    "generation_directives": [
      "Select a single variable within a loop or a sequence of operations where its value is modified multiple times.",
      "Provide concrete, new values for all required variables or parameters.",
      "The correct answer must be the exact sequence of values.",
      "The incorrect answers should be altered sequence of values or random sequence of values.",
      "Every part of the generated output must be directly tied to the provided code submission.",
      "Do not ask questions that have anything to do with the Random class or it's seed. Do not even mention seed.",
      "All answer options must have the same length. If the correct answer has \"n\" values then the incorrect answers should also have \"n\" values."
    ],
    "examples": [
      {
        "scenario": "A loop calculates a running total in a variable named sum.",
        "question_example": "Consider the for loop that calculates the sum. What is the value of the sum variable at the end of the 1st, 2nd, and 3rd iterations, respectively?"
      },
      {
        "scenario": "A variable score is modified by several consecutive assignment statements.",
        "question_example": "Trace the value of the score variable. What is its value immediately after line 15, line 18, and line 22?"
      }
    ]
  },
  "Execution Path Analysis": {
    "definition": "This question type tests the student's ability to understand and predict the program's control flow, specifically how conditional statements (if, else if, else) direct which code is executed.",
    "generation_directives": [
      "Select a conditional block in the student's code.",
      "Provide a specific, new concrete set of input values that will be used by the conditional check.",
      "The correct answer must identify the specific conditional block that is executed. Explictly, mention the condition that evaluates to true.",
      "The incorrect answers must identify the other, non-executed blocks. Explictly, mention the conditions that do not evaluate to true.",
      "Do not ask questions that have anything to do with the Random class or it's seed. Do not even mention seed.",
      "Make sure you ask questions about all the valid conditional blocks in the student's code.",
      "Every part of the generated output must be directly tied to the provided code submission.",
      "All answer options must be parallel in structure and similar in length. Avoid making the correct answer noticeably different from the incorrect ones."
    ],
    "examples": [
      {
        "scenario": "A method has an if (score >= 90) block to assign grades.",
        "question_example": "If the assignGrade method is called with a score of 89, which conditional block will be executed?"
      },
      {
        "scenario": "A nested conditional statement checks age and hasLicense.",
        "question_example": "Given an age of 20 and a hasLicense value of false, what line will be executed?"
      }
    ]
  },
  "Bug Identification": {
    "definition": "This question type tests the student's ability to spot compile time, runtime or logical errors.",
    "generation_directives": [
      "Select a compile time, runtime or logical error from the students' code.",
      "Do not ask questions about style or efficiency. Stylistic issues and sub-optimal solutions are not considered bugs.",
      "The correct answer must be a precise description of the bug.",
      "The incorrect answers should describe other plausible but incorrect bugs or non-issues.",
      "Every part of the generated output must be directly tied to the provided code submission.",
      "All answer options must be parallel in structure and similar in length. Avoid making the correct answer noticeably different from the incorrect ones."
    ],
    "examples": [
      {
        "scenario": "printUserDetails method takes an object as a parameter but then immediately tries to use one of its methods without checking if the object is null.",
        "question_example": "If a null value is passed as an argument to the printUserDetails method, what specific type of runtime error will occur?"
      },
      {
        "scenario": "A for loop is written as for (int i = 0; i <= items.length; i++), which attempts to access an element outside the bounds of the array.",
        "question_example": "Consider the for loop. What is the final value of the variable total after the loop has finished executing?"
      }
    ]
  },
  "Method Relationship: Direct Call": {
    "definition": "This question type tests the student's ability to trace which user-defined method/function is called by a method/function.",
    "generation_directives": [
      "Strictly, select a user-defined method from the student's code that makes a call to another method/function.",
      "AVOID methods that do not call any other methods/functions.",
      "The correct answer must be a method/function that is called.",
      "The incorrect answers should be other method/function names from the students' code or generic method/function names.",
      "DO NOT ask questions about the Deck class and Player.getCard & Player.addCard methods.",
      "Every part of the generated output must be directly tied to the provided code submission."
    ],
    "examples": [
      {
        "scenario": "A main method contains the line myObject.calculate();.",
        "question_example": "Which method is called on the myObject instance inside the main method?"
      },
      {
        "scenario": "A createReport() method calls a private helper method named formatHeader().",
        "question_example": "Consider the for loop in the main method. What is the final value of the variable total after the loop has finished executing?"
      }
    ]
  },
  "Method Relationship: Call Hierarchy": {
    "definition": "This question type tests the student's ability to analyze the order of execution in a line of code with nested method calls.",
    "generation_directives": [
      "Select a line of code from the student's submission that contains at least two nested method calls (e.g., methodA(methodB())).",
      "The correct answer must be the name of the method that fits the description.",
      "The incorrect answers should be other method names from the students' code or generic method names.",
      "Every part of the generated output must be directly tied to the provided code submission."
    ],
    "examples": [
      {
        "scenario": "The student's code contains the line System.out.println(myCar.getMake().toUpperCase());",
        "question_example": "In the line System.out.println(myCar.getMake().toUpperCase());, which method call is executed first?"
      },
      {
        "scenario": "The student's code contains the line double result = Math.pow(Math.sqrt(x * y), z);.",
        "question_example": "What is the innermost method call on the line that calculates the final value of result?"
      }
    ]
  },
  "Expression Evaluation": {
    "definition": "This question type tests the student's understanding of arithmetic (`+`, `-`, `*`, `/`, `%`), relational (`>`, `<`, `==`), and logical (`&&`, `||`, `!`) operators.",
    "generation_directives": [
      "Identify an arithmetic, relational or boolean expression from the student's code.",
      "Provide concrete, new input values for all required variables used in the expression.",
      "Make sure that the variables have the correct data types.",
      "The correct answer must be the single, correct result of the evaluation.",
      "DO NOT make your own expressions. Only use expressions that are already present in the student's code.",
      "The incorrect answers must include incorrect outcomes based on common miscalculations (like operator precedence errors for arithmetic expressions or logical fallacies for boolean ones).",
      "Every part of the generated output must be directly tied to the provided code submission."
    ],
    "examples": [
      {
        "scenario": "The student's code contains an if statement like `if (score > 80 && attendance >= 0.9)`.",
        "question_example": "If the variable `score` is `85` and the variable `attendance` is `0.85`, what is the final boolean value of the expression `score > 80 && attendance >= 0.9`?"
      }
    ]
  }
}
